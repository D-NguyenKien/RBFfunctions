function plot_mesh(X,connect,elem_type,se)

% function plot_mesh(X,connect,elem_type,linespec)
% 
% plots a nodal mesh and an associated connectivity.  X is
% the nodal coordinates, connect is the connectivity, and
% elem_type is either 'L2', 'L3', 'T3', 'T6', 'Q4', or 'Q9' 
% depending on the element topology.
  
if ( nargin < 4 )
   se='w-';
end

holdState=ishold;
hold on

% fill X if needed
if (size(X,2) < 3)
   for c=size(X,2)+1:3
      X(:,c)=[zeros(size(X,1),1)];
   end
end

for e=1:size(connect,1)
  
   if ( strcmp(elem_type,'Q9') )       % 9-node quad element
      ord=[1,5,2,6,3,7,4,8,1];
   elseif ( strcmp(elem_type,'Q8') )  % 8-node quad element
      ord=[1,5,2,6,3,7,4,8,1];
   elseif ( strcmp(elem_type,'T3') )  % 3-node triangle element
      ord=[1,2,3,1];
   elseif ( strcmp(elem_type,'T6') )  % 6-node triangle element
      ord=[1,4,2,5,3,6,1];
   elseif ( strcmp(elem_type,'Q4') )  % 4-node quadrilateral element
      ord=[1,2,3,4,1];
   elseif ( strcmp(elem_type,'L2') )  % 2-node line element
      ord=[1,2];   
   elseif ( strcmp(elem_type,'L3') )  % 3-node line element
      ord=[1,3,2];   
   elseif ( strcmp(elem_type,'H4') )  % 4-node tet element
      ord=[1,2,4,1,3,4,2,3];   
   elseif ( strcmp(elem_type,'B8') )  % 8-node brick element
      ord=[1,5,6,2,3,7,8,4,1,2,3,4,8,5,6,7];   
   elseif (strcmp(elem_type, 'AFEMR'))  % AFEM Q4_R refinement
       ord = [1 2 3 4 1];
   elseif (strcmp(elem_type, 'ARBF5'))  % AFEM RBF5 refinement
       ord = [1 2 3 4 5 1];    
   elseif (strcmp(elem_type, 'ARBF6'))  % AFEM RBF6 refinement
       ord = [1 2 3 4 5 6 1];  
   elseif ( strcmp(elem_type,'RBF3') )  % RBF-3node element
      ord=[1,2,3,1];
    elseif ( strcmp(elem_type,'RBF4') )  % RBF-4node element
      ord=[1,2,4,3,1];  
    elseif ( strcmp(elem_type,'RBF5') )  % RBF-5node element
      ord=[1,2,5,4,1]; 
    elseif ( strcmp(elem_type,'RBF6') )  % RBF-6node element
      ord=[1,2,4,6,5,3,1];
    elseif ( strcmp(elem_type,'RBF602') )  % RBF-602node element
      ord=[1,2,3,6,5,4,1];
    elseif ( strcmp(elem_type,'RBF62') )  % RBF-6-2node element
      ord=[1,2,6,5,1];
    elseif ( strcmp(elem_type,'RBF7') )  % RBF-7node element
      ord=[1,2,5,7,6,3,1];
    elseif ( strcmp(elem_type,'RBF73') )  % RBF-7-3node element
      ord=[1,2,7,6,1];  
    elseif ( strcmp(elem_type,'RBF8') )  % RBF-8node element
      ord=[1,2,3,5,8,7,6,4,1];
    elseif ( strcmp(elem_type,'RBF82') )  % RBF-8-2node element
      ord=[1,2,5,8,7,4,1];
    elseif ( strcmp(elem_type,'RBF841') )  % RBF-8-4node element % very bad result
      ord=[1,2,8,7,1];
    elseif ( strcmp(elem_type,'RBF842') )  % RBF-8-4node element % very bad result
      ord=[1,2,8,7,1];
    elseif ( strcmp(elem_type,'RBF9') )  % RBF-9node element
      ord=[1,2,3,6,9,8,7,4,1];  
    elseif ( strcmp(elem_type,'RBF16') )  % RBF-9node element
      ord=[1,2,3,4,8,12,16,15,14,13,9,5,1];              
   end
   
   for n=1:size(ord,2)
      xpt(n)=X(connect(e,ord(n)),1);
      ypt(n)=X(connect(e,ord(n)),2);      
      zpt(n)=X(connect(e,ord(n)),3);
   end
   plot3(xpt,ypt,zpt,se)
end

rotate3d on
axis equal
      
if ( ~holdState )
  hold off
end
